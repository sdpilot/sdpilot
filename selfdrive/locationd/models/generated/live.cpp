#include "live.h"

namespace {
#define DIM 22
#define EDIM 21
#define MEDIM 21
typedef void (*Hfun)(double *, double *, double *);
const static double MAHA_THRESH_4 = 7.814727903251177;
const static double MAHA_THRESH_9 = 7.814727903251177;
const static double MAHA_THRESH_10 = 7.814727903251177;
const static double MAHA_THRESH_12 = 7.814727903251177;
const static double MAHA_THRESH_31 = 7.814727903251177;
const static double MAHA_THRESH_32 = 9.487729036781154;
const static double MAHA_THRESH_13 = 7.814727903251177;
const static double MAHA_THRESH_14 = 7.814727903251177;
const static double MAHA_THRESH_33 = 7.814727903251177;

/******************************************************************************
 *                       Code generated with sympy 1.8                        *
 *                                                                            *
 *              See http://www.sympy.org/ for more information.               *
 *                                                                            *
 *                         This file is part of 'ekf'                         *
 ******************************************************************************/
void H(double *in_vec, double *out_411448996248703735) {
   out_411448996248703735[0] = 0;
   out_411448996248703735[1] = -sin(in_vec[1])*sin(in_vec[2])*in_vec[4] - sin(in_vec[1])*cos(in_vec[2])*in_vec[3] - cos(in_vec[1])*in_vec[5];
   out_411448996248703735[2] = -sin(in_vec[2])*cos(in_vec[1])*in_vec[3] + cos(in_vec[1])*cos(in_vec[2])*in_vec[4];
   out_411448996248703735[3] = cos(in_vec[1])*cos(in_vec[2]);
   out_411448996248703735[4] = sin(in_vec[2])*cos(in_vec[1]);
   out_411448996248703735[5] = -sin(in_vec[1]);
   out_411448996248703735[6] = (sin(in_vec[0])*sin(in_vec[2]) + sin(in_vec[1])*cos(in_vec[0])*cos(in_vec[2]))*in_vec[3] + (-sin(in_vec[0])*cos(in_vec[2]) + sin(in_vec[1])*sin(in_vec[2])*cos(in_vec[0]))*in_vec[4] + cos(in_vec[0])*cos(in_vec[1])*in_vec[5];
   out_411448996248703735[7] = -sin(in_vec[0])*sin(in_vec[1])*in_vec[5] + sin(in_vec[0])*sin(in_vec[2])*cos(in_vec[1])*in_vec[4] + sin(in_vec[0])*cos(in_vec[1])*cos(in_vec[2])*in_vec[3];
   out_411448996248703735[8] = (-sin(in_vec[0])*sin(in_vec[1])*sin(in_vec[2]) - cos(in_vec[0])*cos(in_vec[2]))*in_vec[3] + (sin(in_vec[0])*sin(in_vec[1])*cos(in_vec[2]) - sin(in_vec[2])*cos(in_vec[0]))*in_vec[4];
   out_411448996248703735[9] = sin(in_vec[0])*sin(in_vec[1])*cos(in_vec[2]) - sin(in_vec[2])*cos(in_vec[0]);
   out_411448996248703735[10] = sin(in_vec[0])*sin(in_vec[1])*sin(in_vec[2]) + cos(in_vec[0])*cos(in_vec[2]);
   out_411448996248703735[11] = sin(in_vec[0])*cos(in_vec[1]);
   out_411448996248703735[12] = (-sin(in_vec[0])*sin(in_vec[1])*sin(in_vec[2]) - cos(in_vec[0])*cos(in_vec[2]))*in_vec[4] + (-sin(in_vec[0])*sin(in_vec[1])*cos(in_vec[2]) + sin(in_vec[2])*cos(in_vec[0]))*in_vec[3] - sin(in_vec[0])*cos(in_vec[1])*in_vec[5];
   out_411448996248703735[13] = -sin(in_vec[1])*cos(in_vec[0])*in_vec[5] + sin(in_vec[2])*cos(in_vec[0])*cos(in_vec[1])*in_vec[4] + cos(in_vec[0])*cos(in_vec[1])*cos(in_vec[2])*in_vec[3];
   out_411448996248703735[14] = (sin(in_vec[0])*sin(in_vec[2]) + sin(in_vec[1])*cos(in_vec[0])*cos(in_vec[2]))*in_vec[4] + (sin(in_vec[0])*cos(in_vec[2]) - sin(in_vec[1])*sin(in_vec[2])*cos(in_vec[0]))*in_vec[3];
   out_411448996248703735[15] = sin(in_vec[0])*sin(in_vec[2]) + sin(in_vec[1])*cos(in_vec[0])*cos(in_vec[2]);
   out_411448996248703735[16] = -sin(in_vec[0])*cos(in_vec[2]) + sin(in_vec[1])*sin(in_vec[2])*cos(in_vec[0]);
   out_411448996248703735[17] = cos(in_vec[0])*cos(in_vec[1]);
}
void err_fun(double *nom_x, double *delta_x, double *out_1085822966685210764) {
   out_1085822966685210764[0] = delta_x[0] + nom_x[0];
   out_1085822966685210764[1] = delta_x[1] + nom_x[1];
   out_1085822966685210764[2] = delta_x[2] + nom_x[2];
   out_1085822966685210764[3] = -0.5*delta_x[3]*nom_x[4] - 0.5*delta_x[4]*nom_x[5] - 0.5*delta_x[5]*nom_x[6] + 1.0*nom_x[3];
   out_1085822966685210764[4] = 0.5*delta_x[3]*nom_x[3] + 0.5*delta_x[4]*nom_x[6] - 0.5*delta_x[5]*nom_x[5] + 1.0*nom_x[4];
   out_1085822966685210764[5] = -0.5*delta_x[3]*nom_x[6] + 0.5*delta_x[4]*nom_x[3] + 0.5*delta_x[5]*nom_x[4] + 1.0*nom_x[5];
   out_1085822966685210764[6] = 0.5*delta_x[3]*nom_x[5] - 0.5*delta_x[4]*nom_x[4] + 0.5*delta_x[5]*nom_x[3] + 1.0*nom_x[6];
   out_1085822966685210764[7] = delta_x[6] + nom_x[7];
   out_1085822966685210764[8] = delta_x[7] + nom_x[8];
   out_1085822966685210764[9] = delta_x[8] + nom_x[9];
   out_1085822966685210764[10] = delta_x[9] + nom_x[10];
   out_1085822966685210764[11] = delta_x[10] + nom_x[11];
   out_1085822966685210764[12] = delta_x[11] + nom_x[12];
   out_1085822966685210764[13] = delta_x[12] + nom_x[13];
   out_1085822966685210764[14] = delta_x[13] + nom_x[14];
   out_1085822966685210764[15] = delta_x[14] + nom_x[15];
   out_1085822966685210764[16] = delta_x[15] + nom_x[16];
   out_1085822966685210764[17] = delta_x[16] + nom_x[17];
   out_1085822966685210764[18] = delta_x[17] + nom_x[18];
   out_1085822966685210764[19] = delta_x[18] + nom_x[19];
   out_1085822966685210764[20] = delta_x[19] + nom_x[20];
   out_1085822966685210764[21] = delta_x[20] + nom_x[21];
}
void inv_err_fun(double *nom_x, double *true_x, double *out_7262348582700839748) {
   out_7262348582700839748[0] = -nom_x[0] + true_x[0];
   out_7262348582700839748[1] = -nom_x[1] + true_x[1];
   out_7262348582700839748[2] = -nom_x[2] + true_x[2];
   out_7262348582700839748[3] = 2*nom_x[3]*true_x[4] - 2*nom_x[4]*true_x[3] + 2*nom_x[5]*true_x[6] - 2*nom_x[6]*true_x[5];
   out_7262348582700839748[4] = 2*nom_x[3]*true_x[5] - 2*nom_x[4]*true_x[6] - 2*nom_x[5]*true_x[3] + 2*nom_x[6]*true_x[4];
   out_7262348582700839748[5] = 2*nom_x[3]*true_x[6] + 2*nom_x[4]*true_x[5] - 2*nom_x[5]*true_x[4] - 2*nom_x[6]*true_x[3];
   out_7262348582700839748[6] = -nom_x[7] + true_x[7];
   out_7262348582700839748[7] = -nom_x[8] + true_x[8];
   out_7262348582700839748[8] = -nom_x[9] + true_x[9];
   out_7262348582700839748[9] = -nom_x[10] + true_x[10];
   out_7262348582700839748[10] = -nom_x[11] + true_x[11];
   out_7262348582700839748[11] = -nom_x[12] + true_x[12];
   out_7262348582700839748[12] = -nom_x[13] + true_x[13];
   out_7262348582700839748[13] = -nom_x[14] + true_x[14];
   out_7262348582700839748[14] = -nom_x[15] + true_x[15];
   out_7262348582700839748[15] = -nom_x[16] + true_x[16];
   out_7262348582700839748[16] = -nom_x[17] + true_x[17];
   out_7262348582700839748[17] = -nom_x[18] + true_x[18];
   out_7262348582700839748[18] = -nom_x[19] + true_x[19];
   out_7262348582700839748[19] = -nom_x[20] + true_x[20];
   out_7262348582700839748[20] = -nom_x[21] + true_x[21];
}
void H_mod_fun(double *state, double *out_3888029891761610350) {
   out_3888029891761610350[0] = 1.0;
   out_3888029891761610350[1] = 0.0;
   out_3888029891761610350[2] = 0.0;
   out_3888029891761610350[3] = 0.0;
   out_3888029891761610350[4] = 0.0;
   out_3888029891761610350[5] = 0.0;
   out_3888029891761610350[6] = 0.0;
   out_3888029891761610350[7] = 0.0;
   out_3888029891761610350[8] = 0.0;
   out_3888029891761610350[9] = 0.0;
   out_3888029891761610350[10] = 0.0;
   out_3888029891761610350[11] = 0.0;
   out_3888029891761610350[12] = 0.0;
   out_3888029891761610350[13] = 0.0;
   out_3888029891761610350[14] = 0.0;
   out_3888029891761610350[15] = 0.0;
   out_3888029891761610350[16] = 0.0;
   out_3888029891761610350[17] = 0.0;
   out_3888029891761610350[18] = 0.0;
   out_3888029891761610350[19] = 0.0;
   out_3888029891761610350[20] = 0.0;
   out_3888029891761610350[21] = 0.0;
   out_3888029891761610350[22] = 1.0;
   out_3888029891761610350[23] = 0.0;
   out_3888029891761610350[24] = 0.0;
   out_3888029891761610350[25] = 0.0;
   out_3888029891761610350[26] = 0.0;
   out_3888029891761610350[27] = 0.0;
   out_3888029891761610350[28] = 0.0;
   out_3888029891761610350[29] = 0.0;
   out_3888029891761610350[30] = 0.0;
   out_3888029891761610350[31] = 0.0;
   out_3888029891761610350[32] = 0.0;
   out_3888029891761610350[33] = 0.0;
   out_3888029891761610350[34] = 0.0;
   out_3888029891761610350[35] = 0.0;
   out_3888029891761610350[36] = 0.0;
   out_3888029891761610350[37] = 0.0;
   out_3888029891761610350[38] = 0.0;
   out_3888029891761610350[39] = 0.0;
   out_3888029891761610350[40] = 0.0;
   out_3888029891761610350[41] = 0.0;
   out_3888029891761610350[42] = 0.0;
   out_3888029891761610350[43] = 0.0;
   out_3888029891761610350[44] = 1.0;
   out_3888029891761610350[45] = 0.0;
   out_3888029891761610350[46] = 0.0;
   out_3888029891761610350[47] = 0.0;
   out_3888029891761610350[48] = 0.0;
   out_3888029891761610350[49] = 0.0;
   out_3888029891761610350[50] = 0.0;
   out_3888029891761610350[51] = 0.0;
   out_3888029891761610350[52] = 0.0;
   out_3888029891761610350[53] = 0.0;
   out_3888029891761610350[54] = 0.0;
   out_3888029891761610350[55] = 0.0;
   out_3888029891761610350[56] = 0.0;
   out_3888029891761610350[57] = 0.0;
   out_3888029891761610350[58] = 0.0;
   out_3888029891761610350[59] = 0.0;
   out_3888029891761610350[60] = 0.0;
   out_3888029891761610350[61] = 0.0;
   out_3888029891761610350[62] = 0.0;
   out_3888029891761610350[63] = 0.0;
   out_3888029891761610350[64] = 0.0;
   out_3888029891761610350[65] = 0.0;
   out_3888029891761610350[66] = -0.5*state[4];
   out_3888029891761610350[67] = -0.5*state[5];
   out_3888029891761610350[68] = -0.5*state[6];
   out_3888029891761610350[69] = 0.0;
   out_3888029891761610350[70] = 0.0;
   out_3888029891761610350[71] = 0.0;
   out_3888029891761610350[72] = 0.0;
   out_3888029891761610350[73] = 0.0;
   out_3888029891761610350[74] = 0.0;
   out_3888029891761610350[75] = 0.0;
   out_3888029891761610350[76] = 0.0;
   out_3888029891761610350[77] = 0.0;
   out_3888029891761610350[78] = 0.0;
   out_3888029891761610350[79] = 0.0;
   out_3888029891761610350[80] = 0.0;
   out_3888029891761610350[81] = 0.0;
   out_3888029891761610350[82] = 0.0;
   out_3888029891761610350[83] = 0.0;
   out_3888029891761610350[84] = 0.0;
   out_3888029891761610350[85] = 0.0;
   out_3888029891761610350[86] = 0.0;
   out_3888029891761610350[87] = 0.5*state[3];
   out_3888029891761610350[88] = 0.5*state[6];
   out_3888029891761610350[89] = -0.5*state[5];
   out_3888029891761610350[90] = 0.0;
   out_3888029891761610350[91] = 0.0;
   out_3888029891761610350[92] = 0.0;
   out_3888029891761610350[93] = 0.0;
   out_3888029891761610350[94] = 0.0;
   out_3888029891761610350[95] = 0.0;
   out_3888029891761610350[96] = 0.0;
   out_3888029891761610350[97] = 0.0;
   out_3888029891761610350[98] = 0.0;
   out_3888029891761610350[99] = 0.0;
   out_3888029891761610350[100] = 0.0;
   out_3888029891761610350[101] = 0.0;
   out_3888029891761610350[102] = 0.0;
   out_3888029891761610350[103] = 0.0;
   out_3888029891761610350[104] = 0.0;
   out_3888029891761610350[105] = 0.0;
   out_3888029891761610350[106] = 0.0;
   out_3888029891761610350[107] = 0.0;
   out_3888029891761610350[108] = -0.5*state[6];
   out_3888029891761610350[109] = 0.5*state[3];
   out_3888029891761610350[110] = 0.5*state[4];
   out_3888029891761610350[111] = 0.0;
   out_3888029891761610350[112] = 0.0;
   out_3888029891761610350[113] = 0.0;
   out_3888029891761610350[114] = 0.0;
   out_3888029891761610350[115] = 0.0;
   out_3888029891761610350[116] = 0.0;
   out_3888029891761610350[117] = 0.0;
   out_3888029891761610350[118] = 0.0;
   out_3888029891761610350[119] = 0.0;
   out_3888029891761610350[120] = 0.0;
   out_3888029891761610350[121] = 0.0;
   out_3888029891761610350[122] = 0.0;
   out_3888029891761610350[123] = 0.0;
   out_3888029891761610350[124] = 0.0;
   out_3888029891761610350[125] = 0.0;
   out_3888029891761610350[126] = 0.0;
   out_3888029891761610350[127] = 0.0;
   out_3888029891761610350[128] = 0.0;
   out_3888029891761610350[129] = 0.5*state[5];
   out_3888029891761610350[130] = -0.5*state[4];
   out_3888029891761610350[131] = 0.5*state[3];
   out_3888029891761610350[132] = 0.0;
   out_3888029891761610350[133] = 0.0;
   out_3888029891761610350[134] = 0.0;
   out_3888029891761610350[135] = 0.0;
   out_3888029891761610350[136] = 0.0;
   out_3888029891761610350[137] = 0.0;
   out_3888029891761610350[138] = 0.0;
   out_3888029891761610350[139] = 0.0;
   out_3888029891761610350[140] = 0.0;
   out_3888029891761610350[141] = 0.0;
   out_3888029891761610350[142] = 0.0;
   out_3888029891761610350[143] = 0.0;
   out_3888029891761610350[144] = 0.0;
   out_3888029891761610350[145] = 0.0;
   out_3888029891761610350[146] = 0.0;
   out_3888029891761610350[147] = 0.0;
   out_3888029891761610350[148] = 0.0;
   out_3888029891761610350[149] = 0.0;
   out_3888029891761610350[150] = 0.0;
   out_3888029891761610350[151] = 0.0;
   out_3888029891761610350[152] = 0.0;
   out_3888029891761610350[153] = 1.0;
   out_3888029891761610350[154] = 0.0;
   out_3888029891761610350[155] = 0.0;
   out_3888029891761610350[156] = 0.0;
   out_3888029891761610350[157] = 0.0;
   out_3888029891761610350[158] = 0.0;
   out_3888029891761610350[159] = 0.0;
   out_3888029891761610350[160] = 0.0;
   out_3888029891761610350[161] = 0.0;
   out_3888029891761610350[162] = 0.0;
   out_3888029891761610350[163] = 0.0;
   out_3888029891761610350[164] = 0.0;
   out_3888029891761610350[165] = 0.0;
   out_3888029891761610350[166] = 0.0;
   out_3888029891761610350[167] = 0.0;
   out_3888029891761610350[168] = 0.0;
   out_3888029891761610350[169] = 0.0;
   out_3888029891761610350[170] = 0.0;
   out_3888029891761610350[171] = 0.0;
   out_3888029891761610350[172] = 0.0;
   out_3888029891761610350[173] = 0.0;
   out_3888029891761610350[174] = 0.0;
   out_3888029891761610350[175] = 1.0;
   out_3888029891761610350[176] = 0.0;
   out_3888029891761610350[177] = 0.0;
   out_3888029891761610350[178] = 0.0;
   out_3888029891761610350[179] = 0.0;
   out_3888029891761610350[180] = 0.0;
   out_3888029891761610350[181] = 0.0;
   out_3888029891761610350[182] = 0.0;
   out_3888029891761610350[183] = 0.0;
   out_3888029891761610350[184] = 0.0;
   out_3888029891761610350[185] = 0.0;
   out_3888029891761610350[186] = 0.0;
   out_3888029891761610350[187] = 0.0;
   out_3888029891761610350[188] = 0.0;
   out_3888029891761610350[189] = 0.0;
   out_3888029891761610350[190] = 0.0;
   out_3888029891761610350[191] = 0.0;
   out_3888029891761610350[192] = 0.0;
   out_3888029891761610350[193] = 0.0;
   out_3888029891761610350[194] = 0.0;
   out_3888029891761610350[195] = 0.0;
   out_3888029891761610350[196] = 0.0;
   out_3888029891761610350[197] = 1.0;
   out_3888029891761610350[198] = 0.0;
   out_3888029891761610350[199] = 0.0;
   out_3888029891761610350[200] = 0.0;
   out_3888029891761610350[201] = 0.0;
   out_3888029891761610350[202] = 0.0;
   out_3888029891761610350[203] = 0.0;
   out_3888029891761610350[204] = 0.0;
   out_3888029891761610350[205] = 0.0;
   out_3888029891761610350[206] = 0.0;
   out_3888029891761610350[207] = 0.0;
   out_3888029891761610350[208] = 0.0;
   out_3888029891761610350[209] = 0.0;
   out_3888029891761610350[210] = 0.0;
   out_3888029891761610350[211] = 0.0;
   out_3888029891761610350[212] = 0.0;
   out_3888029891761610350[213] = 0.0;
   out_3888029891761610350[214] = 0.0;
   out_3888029891761610350[215] = 0.0;
   out_3888029891761610350[216] = 0.0;
   out_3888029891761610350[217] = 0.0;
   out_3888029891761610350[218] = 0.0;
   out_3888029891761610350[219] = 1.0;
   out_3888029891761610350[220] = 0.0;
   out_3888029891761610350[221] = 0.0;
   out_3888029891761610350[222] = 0.0;
   out_3888029891761610350[223] = 0.0;
   out_3888029891761610350[224] = 0.0;
   out_3888029891761610350[225] = 0.0;
   out_3888029891761610350[226] = 0.0;
   out_3888029891761610350[227] = 0.0;
   out_3888029891761610350[228] = 0.0;
   out_3888029891761610350[229] = 0.0;
   out_3888029891761610350[230] = 0.0;
   out_3888029891761610350[231] = 0.0;
   out_3888029891761610350[232] = 0.0;
   out_3888029891761610350[233] = 0.0;
   out_3888029891761610350[234] = 0.0;
   out_3888029891761610350[235] = 0.0;
   out_3888029891761610350[236] = 0.0;
   out_3888029891761610350[237] = 0.0;
   out_3888029891761610350[238] = 0.0;
   out_3888029891761610350[239] = 0.0;
   out_3888029891761610350[240] = 0.0;
   out_3888029891761610350[241] = 1.0;
   out_3888029891761610350[242] = 0.0;
   out_3888029891761610350[243] = 0.0;
   out_3888029891761610350[244] = 0.0;
   out_3888029891761610350[245] = 0.0;
   out_3888029891761610350[246] = 0.0;
   out_3888029891761610350[247] = 0.0;
   out_3888029891761610350[248] = 0.0;
   out_3888029891761610350[249] = 0.0;
   out_3888029891761610350[250] = 0.0;
   out_3888029891761610350[251] = 0.0;
   out_3888029891761610350[252] = 0.0;
   out_3888029891761610350[253] = 0.0;
   out_3888029891761610350[254] = 0.0;
   out_3888029891761610350[255] = 0.0;
   out_3888029891761610350[256] = 0.0;
   out_3888029891761610350[257] = 0.0;
   out_3888029891761610350[258] = 0.0;
   out_3888029891761610350[259] = 0.0;
   out_3888029891761610350[260] = 0.0;
   out_3888029891761610350[261] = 0.0;
   out_3888029891761610350[262] = 0.0;
   out_3888029891761610350[263] = 1.0;
   out_3888029891761610350[264] = 0.0;
   out_3888029891761610350[265] = 0.0;
   out_3888029891761610350[266] = 0.0;
   out_3888029891761610350[267] = 0.0;
   out_3888029891761610350[268] = 0.0;
   out_3888029891761610350[269] = 0.0;
   out_3888029891761610350[270] = 0.0;
   out_3888029891761610350[271] = 0.0;
   out_3888029891761610350[272] = 0.0;
   out_3888029891761610350[273] = 0.0;
   out_3888029891761610350[274] = 0.0;
   out_3888029891761610350[275] = 0.0;
   out_3888029891761610350[276] = 0.0;
   out_3888029891761610350[277] = 0.0;
   out_3888029891761610350[278] = 0.0;
   out_3888029891761610350[279] = 0.0;
   out_3888029891761610350[280] = 0.0;
   out_3888029891761610350[281] = 0.0;
   out_3888029891761610350[282] = 0.0;
   out_3888029891761610350[283] = 0.0;
   out_3888029891761610350[284] = 0.0;
   out_3888029891761610350[285] = 1.0;
   out_3888029891761610350[286] = 0.0;
   out_3888029891761610350[287] = 0.0;
   out_3888029891761610350[288] = 0.0;
   out_3888029891761610350[289] = 0.0;
   out_3888029891761610350[290] = 0.0;
   out_3888029891761610350[291] = 0.0;
   out_3888029891761610350[292] = 0.0;
   out_3888029891761610350[293] = 0.0;
   out_3888029891761610350[294] = 0.0;
   out_3888029891761610350[295] = 0.0;
   out_3888029891761610350[296] = 0.0;
   out_3888029891761610350[297] = 0.0;
   out_3888029891761610350[298] = 0.0;
   out_3888029891761610350[299] = 0.0;
   out_3888029891761610350[300] = 0.0;
   out_3888029891761610350[301] = 0.0;
   out_3888029891761610350[302] = 0.0;
   out_3888029891761610350[303] = 0.0;
   out_3888029891761610350[304] = 0.0;
   out_3888029891761610350[305] = 0.0;
   out_3888029891761610350[306] = 0.0;
   out_3888029891761610350[307] = 1.0;
   out_3888029891761610350[308] = 0.0;
   out_3888029891761610350[309] = 0.0;
   out_3888029891761610350[310] = 0.0;
   out_3888029891761610350[311] = 0.0;
   out_3888029891761610350[312] = 0.0;
   out_3888029891761610350[313] = 0.0;
   out_3888029891761610350[314] = 0.0;
   out_3888029891761610350[315] = 0.0;
   out_3888029891761610350[316] = 0.0;
   out_3888029891761610350[317] = 0.0;
   out_3888029891761610350[318] = 0.0;
   out_3888029891761610350[319] = 0.0;
   out_3888029891761610350[320] = 0.0;
   out_3888029891761610350[321] = 0.0;
   out_3888029891761610350[322] = 0.0;
   out_3888029891761610350[323] = 0.0;
   out_3888029891761610350[324] = 0.0;
   out_3888029891761610350[325] = 0.0;
   out_3888029891761610350[326] = 0.0;
   out_3888029891761610350[327] = 0.0;
   out_3888029891761610350[328] = 0.0;
   out_3888029891761610350[329] = 1.0;
   out_3888029891761610350[330] = 0.0;
   out_3888029891761610350[331] = 0.0;
   out_3888029891761610350[332] = 0.0;
   out_3888029891761610350[333] = 0.0;
   out_3888029891761610350[334] = 0.0;
   out_3888029891761610350[335] = 0.0;
   out_3888029891761610350[336] = 0.0;
   out_3888029891761610350[337] = 0.0;
   out_3888029891761610350[338] = 0.0;
   out_3888029891761610350[339] = 0.0;
   out_3888029891761610350[340] = 0.0;
   out_3888029891761610350[341] = 0.0;
   out_3888029891761610350[342] = 0.0;
   out_3888029891761610350[343] = 0.0;
   out_3888029891761610350[344] = 0.0;
   out_3888029891761610350[345] = 0.0;
   out_3888029891761610350[346] = 0.0;
   out_3888029891761610350[347] = 0.0;
   out_3888029891761610350[348] = 0.0;
   out_3888029891761610350[349] = 0.0;
   out_3888029891761610350[350] = 0.0;
   out_3888029891761610350[351] = 1.0;
   out_3888029891761610350[352] = 0.0;
   out_3888029891761610350[353] = 0.0;
   out_3888029891761610350[354] = 0.0;
   out_3888029891761610350[355] = 0.0;
   out_3888029891761610350[356] = 0.0;
   out_3888029891761610350[357] = 0.0;
   out_3888029891761610350[358] = 0.0;
   out_3888029891761610350[359] = 0.0;
   out_3888029891761610350[360] = 0.0;
   out_3888029891761610350[361] = 0.0;
   out_3888029891761610350[362] = 0.0;
   out_3888029891761610350[363] = 0.0;
   out_3888029891761610350[364] = 0.0;
   out_3888029891761610350[365] = 0.0;
   out_3888029891761610350[366] = 0.0;
   out_3888029891761610350[367] = 0.0;
   out_3888029891761610350[368] = 0.0;
   out_3888029891761610350[369] = 0.0;
   out_3888029891761610350[370] = 0.0;
   out_3888029891761610350[371] = 0.0;
   out_3888029891761610350[372] = 0.0;
   out_3888029891761610350[373] = 1.0;
   out_3888029891761610350[374] = 0.0;
   out_3888029891761610350[375] = 0.0;
   out_3888029891761610350[376] = 0.0;
   out_3888029891761610350[377] = 0.0;
   out_3888029891761610350[378] = 0.0;
   out_3888029891761610350[379] = 0.0;
   out_3888029891761610350[380] = 0.0;
   out_3888029891761610350[381] = 0.0;
   out_3888029891761610350[382] = 0.0;
   out_3888029891761610350[383] = 0.0;
   out_3888029891761610350[384] = 0.0;
   out_3888029891761610350[385] = 0.0;
   out_3888029891761610350[386] = 0.0;
   out_3888029891761610350[387] = 0.0;
   out_3888029891761610350[388] = 0.0;
   out_3888029891761610350[389] = 0.0;
   out_3888029891761610350[390] = 0.0;
   out_3888029891761610350[391] = 0.0;
   out_3888029891761610350[392] = 0.0;
   out_3888029891761610350[393] = 0.0;
   out_3888029891761610350[394] = 0.0;
   out_3888029891761610350[395] = 1.0;
   out_3888029891761610350[396] = 0.0;
   out_3888029891761610350[397] = 0.0;
   out_3888029891761610350[398] = 0.0;
   out_3888029891761610350[399] = 0.0;
   out_3888029891761610350[400] = 0.0;
   out_3888029891761610350[401] = 0.0;
   out_3888029891761610350[402] = 0.0;
   out_3888029891761610350[403] = 0.0;
   out_3888029891761610350[404] = 0.0;
   out_3888029891761610350[405] = 0.0;
   out_3888029891761610350[406] = 0.0;
   out_3888029891761610350[407] = 0.0;
   out_3888029891761610350[408] = 0.0;
   out_3888029891761610350[409] = 0.0;
   out_3888029891761610350[410] = 0.0;
   out_3888029891761610350[411] = 0.0;
   out_3888029891761610350[412] = 0.0;
   out_3888029891761610350[413] = 0.0;
   out_3888029891761610350[414] = 0.0;
   out_3888029891761610350[415] = 0.0;
   out_3888029891761610350[416] = 0.0;
   out_3888029891761610350[417] = 1.0;
   out_3888029891761610350[418] = 0.0;
   out_3888029891761610350[419] = 0.0;
   out_3888029891761610350[420] = 0.0;
   out_3888029891761610350[421] = 0.0;
   out_3888029891761610350[422] = 0.0;
   out_3888029891761610350[423] = 0.0;
   out_3888029891761610350[424] = 0.0;
   out_3888029891761610350[425] = 0.0;
   out_3888029891761610350[426] = 0.0;
   out_3888029891761610350[427] = 0.0;
   out_3888029891761610350[428] = 0.0;
   out_3888029891761610350[429] = 0.0;
   out_3888029891761610350[430] = 0.0;
   out_3888029891761610350[431] = 0.0;
   out_3888029891761610350[432] = 0.0;
   out_3888029891761610350[433] = 0.0;
   out_3888029891761610350[434] = 0.0;
   out_3888029891761610350[435] = 0.0;
   out_3888029891761610350[436] = 0.0;
   out_3888029891761610350[437] = 0.0;
   out_3888029891761610350[438] = 0.0;
   out_3888029891761610350[439] = 1.0;
   out_3888029891761610350[440] = 0.0;
   out_3888029891761610350[441] = 0.0;
   out_3888029891761610350[442] = 0.0;
   out_3888029891761610350[443] = 0.0;
   out_3888029891761610350[444] = 0.0;
   out_3888029891761610350[445] = 0.0;
   out_3888029891761610350[446] = 0.0;
   out_3888029891761610350[447] = 0.0;
   out_3888029891761610350[448] = 0.0;
   out_3888029891761610350[449] = 0.0;
   out_3888029891761610350[450] = 0.0;
   out_3888029891761610350[451] = 0.0;
   out_3888029891761610350[452] = 0.0;
   out_3888029891761610350[453] = 0.0;
   out_3888029891761610350[454] = 0.0;
   out_3888029891761610350[455] = 0.0;
   out_3888029891761610350[456] = 0.0;
   out_3888029891761610350[457] = 0.0;
   out_3888029891761610350[458] = 0.0;
   out_3888029891761610350[459] = 0.0;
   out_3888029891761610350[460] = 0.0;
   out_3888029891761610350[461] = 1.0;
}
void f_fun(double *state, double dt, double *out_6542603415890197301) {
   out_6542603415890197301[0] = dt*state[7] + state[0];
   out_6542603415890197301[1] = dt*state[8] + state[1];
   out_6542603415890197301[2] = dt*state[9] + state[2];
   out_6542603415890197301[3] = dt*(-0.5*state[4]*state[10] - 0.5*state[5]*state[11] - 0.5*state[6]*state[12]) + state[3];
   out_6542603415890197301[4] = dt*(0.5*state[3]*state[10] + 0.5*state[5]*state[12] - 0.5*state[6]*state[11]) + state[4];
   out_6542603415890197301[5] = dt*(0.5*state[3]*state[11] - 0.5*state[4]*state[12] + 0.5*state[6]*state[10]) + state[5];
   out_6542603415890197301[6] = dt*(0.5*state[3]*state[12] + 0.5*state[4]*state[11] - 0.5*state[5]*state[10]) + state[6];
   out_6542603415890197301[7] = dt*((2*state[3]*state[5] + 2*state[4]*state[6])*state[18] + (-2*state[3]*state[6] + 2*state[4]*state[5])*state[17] + (pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[16]) + state[7];
   out_6542603415890197301[8] = dt*((-2*state[3]*state[4] + 2*state[5]*state[6])*state[18] + (2*state[3]*state[6] + 2*state[4]*state[5])*state[16] + (pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[17]) + state[8];
   out_6542603415890197301[9] = dt*((2*state[3]*state[4] + 2*state[5]*state[6])*state[17] + (-2*state[3]*state[5] + 2*state[4]*state[6])*state[16] + (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[18]) + state[9];
   out_6542603415890197301[10] = state[10];
   out_6542603415890197301[11] = state[11];
   out_6542603415890197301[12] = state[12];
   out_6542603415890197301[13] = state[13];
   out_6542603415890197301[14] = state[14];
   out_6542603415890197301[15] = state[15];
   out_6542603415890197301[16] = state[16];
   out_6542603415890197301[17] = state[17];
   out_6542603415890197301[18] = state[18];
   out_6542603415890197301[19] = state[19];
   out_6542603415890197301[20] = state[20];
   out_6542603415890197301[21] = state[21];
}
void F_fun(double *state, double dt, double *out_4350196572466825462) {
   out_4350196572466825462[0] = 1;
   out_4350196572466825462[1] = 0;
   out_4350196572466825462[2] = 0;
   out_4350196572466825462[3] = 0;
   out_4350196572466825462[4] = 0;
   out_4350196572466825462[5] = 0;
   out_4350196572466825462[6] = dt;
   out_4350196572466825462[7] = 0;
   out_4350196572466825462[8] = 0;
   out_4350196572466825462[9] = 0;
   out_4350196572466825462[10] = 0;
   out_4350196572466825462[11] = 0;
   out_4350196572466825462[12] = 0;
   out_4350196572466825462[13] = 0;
   out_4350196572466825462[14] = 0;
   out_4350196572466825462[15] = 0;
   out_4350196572466825462[16] = 0;
   out_4350196572466825462[17] = 0;
   out_4350196572466825462[18] = 0;
   out_4350196572466825462[19] = 0;
   out_4350196572466825462[20] = 0;
   out_4350196572466825462[21] = 0;
   out_4350196572466825462[22] = 1;
   out_4350196572466825462[23] = 0;
   out_4350196572466825462[24] = 0;
   out_4350196572466825462[25] = 0;
   out_4350196572466825462[26] = 0;
   out_4350196572466825462[27] = 0;
   out_4350196572466825462[28] = dt;
   out_4350196572466825462[29] = 0;
   out_4350196572466825462[30] = 0;
   out_4350196572466825462[31] = 0;
   out_4350196572466825462[32] = 0;
   out_4350196572466825462[33] = 0;
   out_4350196572466825462[34] = 0;
   out_4350196572466825462[35] = 0;
   out_4350196572466825462[36] = 0;
   out_4350196572466825462[37] = 0;
   out_4350196572466825462[38] = 0;
   out_4350196572466825462[39] = 0;
   out_4350196572466825462[40] = 0;
   out_4350196572466825462[41] = 0;
   out_4350196572466825462[42] = 0;
   out_4350196572466825462[43] = 0;
   out_4350196572466825462[44] = 1;
   out_4350196572466825462[45] = 0;
   out_4350196572466825462[46] = 0;
   out_4350196572466825462[47] = 0;
   out_4350196572466825462[48] = 0;
   out_4350196572466825462[49] = 0;
   out_4350196572466825462[50] = dt;
   out_4350196572466825462[51] = 0;
   out_4350196572466825462[52] = 0;
   out_4350196572466825462[53] = 0;
   out_4350196572466825462[54] = 0;
   out_4350196572466825462[55] = 0;
   out_4350196572466825462[56] = 0;
   out_4350196572466825462[57] = 0;
   out_4350196572466825462[58] = 0;
   out_4350196572466825462[59] = 0;
   out_4350196572466825462[60] = 0;
   out_4350196572466825462[61] = 0;
   out_4350196572466825462[62] = 0;
   out_4350196572466825462[63] = 0;
   out_4350196572466825462[64] = 0;
   out_4350196572466825462[65] = 0;
   out_4350196572466825462[66] = 1;
   out_4350196572466825462[67] = dt*((2*state[3]*state[4] + 2*state[5]*state[6])*state[11] + (-2*state[3]*state[5] + 2*state[4]*state[6])*state[10] + (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[12]);
   out_4350196572466825462[68] = dt*((2*state[3]*state[4] - 2*state[5]*state[6])*state[12] + (-2*state[3]*state[6] - 2*state[4]*state[5])*state[10] + (-pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[11]);
   out_4350196572466825462[69] = 0;
   out_4350196572466825462[70] = 0;
   out_4350196572466825462[71] = 0;
   out_4350196572466825462[72] = dt*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2));
   out_4350196572466825462[73] = dt*(-2*state[3]*state[6] + 2*state[4]*state[5]);
   out_4350196572466825462[74] = dt*(2*state[3]*state[5] + 2*state[4]*state[6]);
   out_4350196572466825462[75] = 0;
   out_4350196572466825462[76] = 0;
   out_4350196572466825462[77] = 0;
   out_4350196572466825462[78] = 0;
   out_4350196572466825462[79] = 0;
   out_4350196572466825462[80] = 0;
   out_4350196572466825462[81] = 0;
   out_4350196572466825462[82] = 0;
   out_4350196572466825462[83] = 0;
   out_4350196572466825462[84] = 0;
   out_4350196572466825462[85] = 0;
   out_4350196572466825462[86] = 0;
   out_4350196572466825462[87] = dt*(-(2*state[3]*state[4] + 2*state[5]*state[6])*state[11] - (-2*state[3]*state[5] + 2*state[4]*state[6])*state[10] - (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[12]);
   out_4350196572466825462[88] = 1;
   out_4350196572466825462[89] = dt*((2*state[3]*state[5] + 2*state[4]*state[6])*state[12] + (-2*state[3]*state[6] + 2*state[4]*state[5])*state[11] + (pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[10]);
   out_4350196572466825462[90] = 0;
   out_4350196572466825462[91] = 0;
   out_4350196572466825462[92] = 0;
   out_4350196572466825462[93] = dt*(2*state[3]*state[6] + 2*state[4]*state[5]);
   out_4350196572466825462[94] = dt*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2));
   out_4350196572466825462[95] = dt*(-2*state[3]*state[4] + 2*state[5]*state[6]);
   out_4350196572466825462[96] = 0;
   out_4350196572466825462[97] = 0;
   out_4350196572466825462[98] = 0;
   out_4350196572466825462[99] = 0;
   out_4350196572466825462[100] = 0;
   out_4350196572466825462[101] = 0;
   out_4350196572466825462[102] = 0;
   out_4350196572466825462[103] = 0;
   out_4350196572466825462[104] = 0;
   out_4350196572466825462[105] = 0;
   out_4350196572466825462[106] = 0;
   out_4350196572466825462[107] = 0;
   out_4350196572466825462[108] = dt*((-2*state[3]*state[4] + 2*state[5]*state[6])*state[12] + (2*state[3]*state[6] + 2*state[4]*state[5])*state[10] + (pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[11]);
   out_4350196572466825462[109] = dt*((-2*state[3]*state[5] - 2*state[4]*state[6])*state[12] + (2*state[3]*state[6] - 2*state[4]*state[5])*state[11] + (-pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) + pow(state[6], 2))*state[10]);
   out_4350196572466825462[110] = 1;
   out_4350196572466825462[111] = 0;
   out_4350196572466825462[112] = 0;
   out_4350196572466825462[113] = 0;
   out_4350196572466825462[114] = dt*(-2*state[3]*state[5] + 2*state[4]*state[6]);
   out_4350196572466825462[115] = dt*(2*state[3]*state[4] + 2*state[5]*state[6]);
   out_4350196572466825462[116] = dt*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2));
   out_4350196572466825462[117] = 0;
   out_4350196572466825462[118] = 0;
   out_4350196572466825462[119] = 0;
   out_4350196572466825462[120] = 0;
   out_4350196572466825462[121] = 0;
   out_4350196572466825462[122] = 0;
   out_4350196572466825462[123] = 0;
   out_4350196572466825462[124] = 0;
   out_4350196572466825462[125] = 0;
   out_4350196572466825462[126] = 0;
   out_4350196572466825462[127] = 0;
   out_4350196572466825462[128] = 0;
   out_4350196572466825462[129] = 0;
   out_4350196572466825462[130] = dt*((2*state[3]*state[4] + 2*state[5]*state[6])*state[17] + (-2*state[3]*state[5] + 2*state[4]*state[6])*state[16] + (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[18]);
   out_4350196572466825462[131] = dt*((2*state[3]*state[4] - 2*state[5]*state[6])*state[18] + (-2*state[3]*state[6] - 2*state[4]*state[5])*state[16] + (-pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[17]);
   out_4350196572466825462[132] = 1;
   out_4350196572466825462[133] = 0;
   out_4350196572466825462[134] = 0;
   out_4350196572466825462[135] = 0;
   out_4350196572466825462[136] = 0;
   out_4350196572466825462[137] = 0;
   out_4350196572466825462[138] = 0;
   out_4350196572466825462[139] = 0;
   out_4350196572466825462[140] = 0;
   out_4350196572466825462[141] = dt*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2));
   out_4350196572466825462[142] = dt*(-2*state[3]*state[6] + 2*state[4]*state[5]);
   out_4350196572466825462[143] = dt*(2*state[3]*state[5] + 2*state[4]*state[6]);
   out_4350196572466825462[144] = 0;
   out_4350196572466825462[145] = 0;
   out_4350196572466825462[146] = 0;
   out_4350196572466825462[147] = 0;
   out_4350196572466825462[148] = 0;
   out_4350196572466825462[149] = 0;
   out_4350196572466825462[150] = dt*(-(2*state[3]*state[4] + 2*state[5]*state[6])*state[17] - (-2*state[3]*state[5] + 2*state[4]*state[6])*state[16] - (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[18]);
   out_4350196572466825462[151] = 0;
   out_4350196572466825462[152] = dt*((2*state[3]*state[5] + 2*state[4]*state[6])*state[18] + (-2*state[3]*state[6] + 2*state[4]*state[5])*state[17] + (pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[16]);
   out_4350196572466825462[153] = 0;
   out_4350196572466825462[154] = 1;
   out_4350196572466825462[155] = 0;
   out_4350196572466825462[156] = 0;
   out_4350196572466825462[157] = 0;
   out_4350196572466825462[158] = 0;
   out_4350196572466825462[159] = 0;
   out_4350196572466825462[160] = 0;
   out_4350196572466825462[161] = 0;
   out_4350196572466825462[162] = dt*(2*state[3]*state[6] + 2*state[4]*state[5]);
   out_4350196572466825462[163] = dt*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2));
   out_4350196572466825462[164] = dt*(-2*state[3]*state[4] + 2*state[5]*state[6]);
   out_4350196572466825462[165] = 0;
   out_4350196572466825462[166] = 0;
   out_4350196572466825462[167] = 0;
   out_4350196572466825462[168] = 0;
   out_4350196572466825462[169] = 0;
   out_4350196572466825462[170] = 0;
   out_4350196572466825462[171] = dt*((-2*state[3]*state[4] + 2*state[5]*state[6])*state[18] + (2*state[3]*state[6] + 2*state[4]*state[5])*state[16] + (pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[17]);
   out_4350196572466825462[172] = dt*((-2*state[3]*state[5] - 2*state[4]*state[6])*state[18] + (2*state[3]*state[6] - 2*state[4]*state[5])*state[17] + (-pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) + pow(state[6], 2))*state[16]);
   out_4350196572466825462[173] = 0;
   out_4350196572466825462[174] = 0;
   out_4350196572466825462[175] = 0;
   out_4350196572466825462[176] = 1;
   out_4350196572466825462[177] = 0;
   out_4350196572466825462[178] = 0;
   out_4350196572466825462[179] = 0;
   out_4350196572466825462[180] = 0;
   out_4350196572466825462[181] = 0;
   out_4350196572466825462[182] = 0;
   out_4350196572466825462[183] = dt*(-2*state[3]*state[5] + 2*state[4]*state[6]);
   out_4350196572466825462[184] = dt*(2*state[3]*state[4] + 2*state[5]*state[6]);
   out_4350196572466825462[185] = dt*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2));
   out_4350196572466825462[186] = 0;
   out_4350196572466825462[187] = 0;
   out_4350196572466825462[188] = 0;
   out_4350196572466825462[189] = 0;
   out_4350196572466825462[190] = 0;
   out_4350196572466825462[191] = 0;
   out_4350196572466825462[192] = 0;
   out_4350196572466825462[193] = 0;
   out_4350196572466825462[194] = 0;
   out_4350196572466825462[195] = 0;
   out_4350196572466825462[196] = 0;
   out_4350196572466825462[197] = 0;
   out_4350196572466825462[198] = 1;
   out_4350196572466825462[199] = 0;
   out_4350196572466825462[200] = 0;
   out_4350196572466825462[201] = 0;
   out_4350196572466825462[202] = 0;
   out_4350196572466825462[203] = 0;
   out_4350196572466825462[204] = 0;
   out_4350196572466825462[205] = 0;
   out_4350196572466825462[206] = 0;
   out_4350196572466825462[207] = 0;
   out_4350196572466825462[208] = 0;
   out_4350196572466825462[209] = 0;
   out_4350196572466825462[210] = 0;
   out_4350196572466825462[211] = 0;
   out_4350196572466825462[212] = 0;
   out_4350196572466825462[213] = 0;
   out_4350196572466825462[214] = 0;
   out_4350196572466825462[215] = 0;
   out_4350196572466825462[216] = 0;
   out_4350196572466825462[217] = 0;
   out_4350196572466825462[218] = 0;
   out_4350196572466825462[219] = 0;
   out_4350196572466825462[220] = 1;
   out_4350196572466825462[221] = 0;
   out_4350196572466825462[222] = 0;
   out_4350196572466825462[223] = 0;
   out_4350196572466825462[224] = 0;
   out_4350196572466825462[225] = 0;
   out_4350196572466825462[226] = 0;
   out_4350196572466825462[227] = 0;
   out_4350196572466825462[228] = 0;
   out_4350196572466825462[229] = 0;
   out_4350196572466825462[230] = 0;
   out_4350196572466825462[231] = 0;
   out_4350196572466825462[232] = 0;
   out_4350196572466825462[233] = 0;
   out_4350196572466825462[234] = 0;
   out_4350196572466825462[235] = 0;
   out_4350196572466825462[236] = 0;
   out_4350196572466825462[237] = 0;
   out_4350196572466825462[238] = 0;
   out_4350196572466825462[239] = 0;
   out_4350196572466825462[240] = 0;
   out_4350196572466825462[241] = 0;
   out_4350196572466825462[242] = 1;
   out_4350196572466825462[243] = 0;
   out_4350196572466825462[244] = 0;
   out_4350196572466825462[245] = 0;
   out_4350196572466825462[246] = 0;
   out_4350196572466825462[247] = 0;
   out_4350196572466825462[248] = 0;
   out_4350196572466825462[249] = 0;
   out_4350196572466825462[250] = 0;
   out_4350196572466825462[251] = 0;
   out_4350196572466825462[252] = 0;
   out_4350196572466825462[253] = 0;
   out_4350196572466825462[254] = 0;
   out_4350196572466825462[255] = 0;
   out_4350196572466825462[256] = 0;
   out_4350196572466825462[257] = 0;
   out_4350196572466825462[258] = 0;
   out_4350196572466825462[259] = 0;
   out_4350196572466825462[260] = 0;
   out_4350196572466825462[261] = 0;
   out_4350196572466825462[262] = 0;
   out_4350196572466825462[263] = 0;
   out_4350196572466825462[264] = 1;
   out_4350196572466825462[265] = 0;
   out_4350196572466825462[266] = 0;
   out_4350196572466825462[267] = 0;
   out_4350196572466825462[268] = 0;
   out_4350196572466825462[269] = 0;
   out_4350196572466825462[270] = 0;
   out_4350196572466825462[271] = 0;
   out_4350196572466825462[272] = 0;
   out_4350196572466825462[273] = 0;
   out_4350196572466825462[274] = 0;
   out_4350196572466825462[275] = 0;
   out_4350196572466825462[276] = 0;
   out_4350196572466825462[277] = 0;
   out_4350196572466825462[278] = 0;
   out_4350196572466825462[279] = 0;
   out_4350196572466825462[280] = 0;
   out_4350196572466825462[281] = 0;
   out_4350196572466825462[282] = 0;
   out_4350196572466825462[283] = 0;
   out_4350196572466825462[284] = 0;
   out_4350196572466825462[285] = 0;
   out_4350196572466825462[286] = 1;
   out_4350196572466825462[287] = 0;
   out_4350196572466825462[288] = 0;
   out_4350196572466825462[289] = 0;
   out_4350196572466825462[290] = 0;
   out_4350196572466825462[291] = 0;
   out_4350196572466825462[292] = 0;
   out_4350196572466825462[293] = 0;
   out_4350196572466825462[294] = 0;
   out_4350196572466825462[295] = 0;
   out_4350196572466825462[296] = 0;
   out_4350196572466825462[297] = 0;
   out_4350196572466825462[298] = 0;
   out_4350196572466825462[299] = 0;
   out_4350196572466825462[300] = 0;
   out_4350196572466825462[301] = 0;
   out_4350196572466825462[302] = 0;
   out_4350196572466825462[303] = 0;
   out_4350196572466825462[304] = 0;
   out_4350196572466825462[305] = 0;
   out_4350196572466825462[306] = 0;
   out_4350196572466825462[307] = 0;
   out_4350196572466825462[308] = 1;
   out_4350196572466825462[309] = 0;
   out_4350196572466825462[310] = 0;
   out_4350196572466825462[311] = 0;
   out_4350196572466825462[312] = 0;
   out_4350196572466825462[313] = 0;
   out_4350196572466825462[314] = 0;
   out_4350196572466825462[315] = 0;
   out_4350196572466825462[316] = 0;
   out_4350196572466825462[317] = 0;
   out_4350196572466825462[318] = 0;
   out_4350196572466825462[319] = 0;
   out_4350196572466825462[320] = 0;
   out_4350196572466825462[321] = 0;
   out_4350196572466825462[322] = 0;
   out_4350196572466825462[323] = 0;
   out_4350196572466825462[324] = 0;
   out_4350196572466825462[325] = 0;
   out_4350196572466825462[326] = 0;
   out_4350196572466825462[327] = 0;
   out_4350196572466825462[328] = 0;
   out_4350196572466825462[329] = 0;
   out_4350196572466825462[330] = 1;
   out_4350196572466825462[331] = 0;
   out_4350196572466825462[332] = 0;
   out_4350196572466825462[333] = 0;
   out_4350196572466825462[334] = 0;
   out_4350196572466825462[335] = 0;
   out_4350196572466825462[336] = 0;
   out_4350196572466825462[337] = 0;
   out_4350196572466825462[338] = 0;
   out_4350196572466825462[339] = 0;
   out_4350196572466825462[340] = 0;
   out_4350196572466825462[341] = 0;
   out_4350196572466825462[342] = 0;
   out_4350196572466825462[343] = 0;
   out_4350196572466825462[344] = 0;
   out_4350196572466825462[345] = 0;
   out_4350196572466825462[346] = 0;
   out_4350196572466825462[347] = 0;
   out_4350196572466825462[348] = 0;
   out_4350196572466825462[349] = 0;
   out_4350196572466825462[350] = 0;
   out_4350196572466825462[351] = 0;
   out_4350196572466825462[352] = 1;
   out_4350196572466825462[353] = 0;
   out_4350196572466825462[354] = 0;
   out_4350196572466825462[355] = 0;
   out_4350196572466825462[356] = 0;
   out_4350196572466825462[357] = 0;
   out_4350196572466825462[358] = 0;
   out_4350196572466825462[359] = 0;
   out_4350196572466825462[360] = 0;
   out_4350196572466825462[361] = 0;
   out_4350196572466825462[362] = 0;
   out_4350196572466825462[363] = 0;
   out_4350196572466825462[364] = 0;
   out_4350196572466825462[365] = 0;
   out_4350196572466825462[366] = 0;
   out_4350196572466825462[367] = 0;
   out_4350196572466825462[368] = 0;
   out_4350196572466825462[369] = 0;
   out_4350196572466825462[370] = 0;
   out_4350196572466825462[371] = 0;
   out_4350196572466825462[372] = 0;
   out_4350196572466825462[373] = 0;
   out_4350196572466825462[374] = 1;
   out_4350196572466825462[375] = 0;
   out_4350196572466825462[376] = 0;
   out_4350196572466825462[377] = 0;
   out_4350196572466825462[378] = 0;
   out_4350196572466825462[379] = 0;
   out_4350196572466825462[380] = 0;
   out_4350196572466825462[381] = 0;
   out_4350196572466825462[382] = 0;
   out_4350196572466825462[383] = 0;
   out_4350196572466825462[384] = 0;
   out_4350196572466825462[385] = 0;
   out_4350196572466825462[386] = 0;
   out_4350196572466825462[387] = 0;
   out_4350196572466825462[388] = 0;
   out_4350196572466825462[389] = 0;
   out_4350196572466825462[390] = 0;
   out_4350196572466825462[391] = 0;
   out_4350196572466825462[392] = 0;
   out_4350196572466825462[393] = 0;
   out_4350196572466825462[394] = 0;
   out_4350196572466825462[395] = 0;
   out_4350196572466825462[396] = 1;
   out_4350196572466825462[397] = 0;
   out_4350196572466825462[398] = 0;
   out_4350196572466825462[399] = 0;
   out_4350196572466825462[400] = 0;
   out_4350196572466825462[401] = 0;
   out_4350196572466825462[402] = 0;
   out_4350196572466825462[403] = 0;
   out_4350196572466825462[404] = 0;
   out_4350196572466825462[405] = 0;
   out_4350196572466825462[406] = 0;
   out_4350196572466825462[407] = 0;
   out_4350196572466825462[408] = 0;
   out_4350196572466825462[409] = 0;
   out_4350196572466825462[410] = 0;
   out_4350196572466825462[411] = 0;
   out_4350196572466825462[412] = 0;
   out_4350196572466825462[413] = 0;
   out_4350196572466825462[414] = 0;
   out_4350196572466825462[415] = 0;
   out_4350196572466825462[416] = 0;
   out_4350196572466825462[417] = 0;
   out_4350196572466825462[418] = 1;
   out_4350196572466825462[419] = 0;
   out_4350196572466825462[420] = 0;
   out_4350196572466825462[421] = 0;
   out_4350196572466825462[422] = 0;
   out_4350196572466825462[423] = 0;
   out_4350196572466825462[424] = 0;
   out_4350196572466825462[425] = 0;
   out_4350196572466825462[426] = 0;
   out_4350196572466825462[427] = 0;
   out_4350196572466825462[428] = 0;
   out_4350196572466825462[429] = 0;
   out_4350196572466825462[430] = 0;
   out_4350196572466825462[431] = 0;
   out_4350196572466825462[432] = 0;
   out_4350196572466825462[433] = 0;
   out_4350196572466825462[434] = 0;
   out_4350196572466825462[435] = 0;
   out_4350196572466825462[436] = 0;
   out_4350196572466825462[437] = 0;
   out_4350196572466825462[438] = 0;
   out_4350196572466825462[439] = 0;
   out_4350196572466825462[440] = 1;
}
void h_4(double *state, double *unused, double *out_7074488734674611985) {
   out_7074488734674611985[0] = state[10] + state[13];
   out_7074488734674611985[1] = state[11] + state[14];
   out_7074488734674611985[2] = state[12] + state[15];
}
void H_4(double *state, double *unused, double *out_2717965093872703048) {
   out_2717965093872703048[0] = 0;
   out_2717965093872703048[1] = 0;
   out_2717965093872703048[2] = 0;
   out_2717965093872703048[3] = 0;
   out_2717965093872703048[4] = 0;
   out_2717965093872703048[5] = 0;
   out_2717965093872703048[6] = 0;
   out_2717965093872703048[7] = 0;
   out_2717965093872703048[8] = 0;
   out_2717965093872703048[9] = 0;
   out_2717965093872703048[10] = 1;
   out_2717965093872703048[11] = 0;
   out_2717965093872703048[12] = 0;
   out_2717965093872703048[13] = 1;
   out_2717965093872703048[14] = 0;
   out_2717965093872703048[15] = 0;
   out_2717965093872703048[16] = 0;
   out_2717965093872703048[17] = 0;
   out_2717965093872703048[18] = 0;
   out_2717965093872703048[19] = 0;
   out_2717965093872703048[20] = 0;
   out_2717965093872703048[21] = 0;
   out_2717965093872703048[22] = 0;
   out_2717965093872703048[23] = 0;
   out_2717965093872703048[24] = 0;
   out_2717965093872703048[25] = 0;
   out_2717965093872703048[26] = 0;
   out_2717965093872703048[27] = 0;
   out_2717965093872703048[28] = 0;
   out_2717965093872703048[29] = 0;
   out_2717965093872703048[30] = 0;
   out_2717965093872703048[31] = 0;
   out_2717965093872703048[32] = 0;
   out_2717965093872703048[33] = 1;
   out_2717965093872703048[34] = 0;
   out_2717965093872703048[35] = 0;
   out_2717965093872703048[36] = 1;
   out_2717965093872703048[37] = 0;
   out_2717965093872703048[38] = 0;
   out_2717965093872703048[39] = 0;
   out_2717965093872703048[40] = 0;
   out_2717965093872703048[41] = 0;
   out_2717965093872703048[42] = 0;
   out_2717965093872703048[43] = 0;
   out_2717965093872703048[44] = 0;
   out_2717965093872703048[45] = 0;
   out_2717965093872703048[46] = 0;
   out_2717965093872703048[47] = 0;
   out_2717965093872703048[48] = 0;
   out_2717965093872703048[49] = 0;
   out_2717965093872703048[50] = 0;
   out_2717965093872703048[51] = 0;
   out_2717965093872703048[52] = 0;
   out_2717965093872703048[53] = 0;
   out_2717965093872703048[54] = 0;
   out_2717965093872703048[55] = 0;
   out_2717965093872703048[56] = 1;
   out_2717965093872703048[57] = 0;
   out_2717965093872703048[58] = 0;
   out_2717965093872703048[59] = 1;
   out_2717965093872703048[60] = 0;
   out_2717965093872703048[61] = 0;
   out_2717965093872703048[62] = 0;
   out_2717965093872703048[63] = 0;
   out_2717965093872703048[64] = 0;
   out_2717965093872703048[65] = 0;
}
void h_9(double *state, double *unused, double *out_8822594196648213134) {
   out_8822594196648213134[0] = state[10];
   out_8822594196648213134[1] = state[11];
   out_8822594196648213134[2] = state[12];
}
void H_9(double *state, double *unused, double *out_4569253841391744422) {
   out_4569253841391744422[0] = 0;
   out_4569253841391744422[1] = 0;
   out_4569253841391744422[2] = 0;
   out_4569253841391744422[3] = 0;
   out_4569253841391744422[4] = 0;
   out_4569253841391744422[5] = 0;
   out_4569253841391744422[6] = 0;
   out_4569253841391744422[7] = 0;
   out_4569253841391744422[8] = 0;
   out_4569253841391744422[9] = 0;
   out_4569253841391744422[10] = 1;
   out_4569253841391744422[11] = 0;
   out_4569253841391744422[12] = 0;
   out_4569253841391744422[13] = 0;
   out_4569253841391744422[14] = 0;
   out_4569253841391744422[15] = 0;
   out_4569253841391744422[16] = 0;
   out_4569253841391744422[17] = 0;
   out_4569253841391744422[18] = 0;
   out_4569253841391744422[19] = 0;
   out_4569253841391744422[20] = 0;
   out_4569253841391744422[21] = 0;
   out_4569253841391744422[22] = 0;
   out_4569253841391744422[23] = 0;
   out_4569253841391744422[24] = 0;
   out_4569253841391744422[25] = 0;
   out_4569253841391744422[26] = 0;
   out_4569253841391744422[27] = 0;
   out_4569253841391744422[28] = 0;
   out_4569253841391744422[29] = 0;
   out_4569253841391744422[30] = 0;
   out_4569253841391744422[31] = 0;
   out_4569253841391744422[32] = 0;
   out_4569253841391744422[33] = 1;
   out_4569253841391744422[34] = 0;
   out_4569253841391744422[35] = 0;
   out_4569253841391744422[36] = 0;
   out_4569253841391744422[37] = 0;
   out_4569253841391744422[38] = 0;
   out_4569253841391744422[39] = 0;
   out_4569253841391744422[40] = 0;
   out_4569253841391744422[41] = 0;
   out_4569253841391744422[42] = 0;
   out_4569253841391744422[43] = 0;
   out_4569253841391744422[44] = 0;
   out_4569253841391744422[45] = 0;
   out_4569253841391744422[46] = 0;
   out_4569253841391744422[47] = 0;
   out_4569253841391744422[48] = 0;
   out_4569253841391744422[49] = 0;
   out_4569253841391744422[50] = 0;
   out_4569253841391744422[51] = 0;
   out_4569253841391744422[52] = 0;
   out_4569253841391744422[53] = 0;
   out_4569253841391744422[54] = 0;
   out_4569253841391744422[55] = 0;
   out_4569253841391744422[56] = 1;
   out_4569253841391744422[57] = 0;
   out_4569253841391744422[58] = 0;
   out_4569253841391744422[59] = 0;
   out_4569253841391744422[60] = 0;
   out_4569253841391744422[61] = 0;
   out_4569253841391744422[62] = 0;
   out_4569253841391744422[63] = 0;
   out_4569253841391744422[64] = 0;
   out_4569253841391744422[65] = 0;
}
void h_10(double *state, double *unused, double *out_2903305059900435345) {
   out_2903305059900435345[0] = 398600500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2] + 398600500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1] + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[0] + state[16] + state[19];
   out_2903305059900435345[1] = 398600500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2] + 398600500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0] + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[1] + state[17] + state[20];
   out_2903305059900435345[2] = 398600500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1] + 398600500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0] + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[2] + state[18] + state[21];
}
void H_10(double *state, double *unused, double *out_5349451036793780592) {
   out_5349451036793780592[0] = -1195801500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[2] - 1195801500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[1] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*pow(state[0], 2) + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2));
   out_5349451036793780592[1] = -1195801500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[1]*state[2] - 1195801500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[1], 2) + 398600500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[0]*state[1];
   out_5349451036793780592[2] = -1195801500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[2], 2) + 398600500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[1]*state[2] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[0]*state[2];
   out_5349451036793780592[3] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[3] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[6] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[5];
   out_5349451036793780592[4] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[5] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[6];
   out_5349451036793780592[5] = -797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[5] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[4] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[3];
   out_5349451036793780592[6] = -797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[6] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[3] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[4];
   out_5349451036793780592[7] = 0;
   out_5349451036793780592[8] = 0;
   out_5349451036793780592[9] = 0;
   out_5349451036793780592[10] = 0;
   out_5349451036793780592[11] = 0;
   out_5349451036793780592[12] = 0;
   out_5349451036793780592[13] = 0;
   out_5349451036793780592[14] = 0;
   out_5349451036793780592[15] = 0;
   out_5349451036793780592[16] = 1;
   out_5349451036793780592[17] = 0;
   out_5349451036793780592[18] = 0;
   out_5349451036793780592[19] = 1;
   out_5349451036793780592[20] = 0;
   out_5349451036793780592[21] = 0;
   out_5349451036793780592[22] = -1195801500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[2] - 1195801500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[0], 2) + 398600500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[0]*state[1];
   out_5349451036793780592[23] = -1195801500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[1]*state[2] - 1195801500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[1] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*pow(state[1], 2) + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2));
   out_5349451036793780592[24] = -1195801500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[2], 2) + 398600500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[2] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[1]*state[2];
   out_5349451036793780592[25] = -797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[6] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[3] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[4];
   out_5349451036793780592[26] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[5] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[3];
   out_5349451036793780592[27] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[5] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[6];
   out_5349451036793780592[28] = -797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[3] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[6] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[5];
   out_5349451036793780592[29] = 0;
   out_5349451036793780592[30] = 0;
   out_5349451036793780592[31] = 0;
   out_5349451036793780592[32] = 0;
   out_5349451036793780592[33] = 0;
   out_5349451036793780592[34] = 0;
   out_5349451036793780592[35] = 0;
   out_5349451036793780592[36] = 0;
   out_5349451036793780592[37] = 0;
   out_5349451036793780592[38] = 0;
   out_5349451036793780592[39] = 1;
   out_5349451036793780592[40] = 0;
   out_5349451036793780592[41] = 0;
   out_5349451036793780592[42] = 1;
   out_5349451036793780592[43] = 0;
   out_5349451036793780592[44] = -1195801500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[1] - 1195801500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[0], 2) + 398600500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[0]*state[2];
   out_5349451036793780592[45] = -1195801500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[1], 2) + 398600500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[1] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[1]*state[2];
   out_5349451036793780592[46] = -1195801500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[1]*state[2] - 1195801500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[2] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*pow(state[2], 2) + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2));
   out_5349451036793780592[47] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[5] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[3];
   out_5349451036793780592[48] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[6] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[3] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[4];
   out_5349451036793780592[49] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[3] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[6] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[5];
   out_5349451036793780592[50] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[5] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[6];
   out_5349451036793780592[51] = 0;
   out_5349451036793780592[52] = 0;
   out_5349451036793780592[53] = 0;
   out_5349451036793780592[54] = 0;
   out_5349451036793780592[55] = 0;
   out_5349451036793780592[56] = 0;
   out_5349451036793780592[57] = 0;
   out_5349451036793780592[58] = 0;
   out_5349451036793780592[59] = 0;
   out_5349451036793780592[60] = 0;
   out_5349451036793780592[61] = 0;
   out_5349451036793780592[62] = 1;
   out_5349451036793780592[63] = 0;
   out_5349451036793780592[64] = 0;
   out_5349451036793780592[65] = 1;
}
void h_12(double *state, double *unused, double *out_2881046531679803007) {
   out_2881046531679803007[0] = state[0];
   out_2881046531679803007[1] = state[1];
   out_2881046531679803007[2] = state[2];
}
void H_12(double *state, double *unused, double *out_9099223470915436044) {
   out_9099223470915436044[0] = 1;
   out_9099223470915436044[1] = 0;
   out_9099223470915436044[2] = 0;
   out_9099223470915436044[3] = 0;
   out_9099223470915436044[4] = 0;
   out_9099223470915436044[5] = 0;
   out_9099223470915436044[6] = 0;
   out_9099223470915436044[7] = 0;
   out_9099223470915436044[8] = 0;
   out_9099223470915436044[9] = 0;
   out_9099223470915436044[10] = 0;
   out_9099223470915436044[11] = 0;
   out_9099223470915436044[12] = 0;
   out_9099223470915436044[13] = 0;
   out_9099223470915436044[14] = 0;
   out_9099223470915436044[15] = 0;
   out_9099223470915436044[16] = 0;
   out_9099223470915436044[17] = 0;
   out_9099223470915436044[18] = 0;
   out_9099223470915436044[19] = 0;
   out_9099223470915436044[20] = 0;
   out_9099223470915436044[21] = 0;
   out_9099223470915436044[22] = 0;
   out_9099223470915436044[23] = 1;
   out_9099223470915436044[24] = 0;
   out_9099223470915436044[25] = 0;
   out_9099223470915436044[26] = 0;
   out_9099223470915436044[27] = 0;
   out_9099223470915436044[28] = 0;
   out_9099223470915436044[29] = 0;
   out_9099223470915436044[30] = 0;
   out_9099223470915436044[31] = 0;
   out_9099223470915436044[32] = 0;
   out_9099223470915436044[33] = 0;
   out_9099223470915436044[34] = 0;
   out_9099223470915436044[35] = 0;
   out_9099223470915436044[36] = 0;
   out_9099223470915436044[37] = 0;
   out_9099223470915436044[38] = 0;
   out_9099223470915436044[39] = 0;
   out_9099223470915436044[40] = 0;
   out_9099223470915436044[41] = 0;
   out_9099223470915436044[42] = 0;
   out_9099223470915436044[43] = 0;
   out_9099223470915436044[44] = 0;
   out_9099223470915436044[45] = 0;
   out_9099223470915436044[46] = 1;
   out_9099223470915436044[47] = 0;
   out_9099223470915436044[48] = 0;
   out_9099223470915436044[49] = 0;
   out_9099223470915436044[50] = 0;
   out_9099223470915436044[51] = 0;
   out_9099223470915436044[52] = 0;
   out_9099223470915436044[53] = 0;
   out_9099223470915436044[54] = 0;
   out_9099223470915436044[55] = 0;
   out_9099223470915436044[56] = 0;
   out_9099223470915436044[57] = 0;
   out_9099223470915436044[58] = 0;
   out_9099223470915436044[59] = 0;
   out_9099223470915436044[60] = 0;
   out_9099223470915436044[61] = 0;
   out_9099223470915436044[62] = 0;
   out_9099223470915436044[63] = 0;
   out_9099223470915436044[64] = 0;
   out_9099223470915436044[65] = 0;
}
void h_31(double *state, double *unused, double *out_2501729476602464410) {
   out_2501729476602464410[0] = state[7];
   out_2501729476602464410[1] = state[8];
   out_2501729476602464410[2] = state[9];
}
void H_31(double *state, double *unused, double *out_7694726252134761153) {
   out_7694726252134761153[0] = 0;
   out_7694726252134761153[1] = 0;
   out_7694726252134761153[2] = 0;
   out_7694726252134761153[3] = 0;
   out_7694726252134761153[4] = 0;
   out_7694726252134761153[5] = 0;
   out_7694726252134761153[6] = 0;
   out_7694726252134761153[7] = 1;
   out_7694726252134761153[8] = 0;
   out_7694726252134761153[9] = 0;
   out_7694726252134761153[10] = 0;
   out_7694726252134761153[11] = 0;
   out_7694726252134761153[12] = 0;
   out_7694726252134761153[13] = 0;
   out_7694726252134761153[14] = 0;
   out_7694726252134761153[15] = 0;
   out_7694726252134761153[16] = 0;
   out_7694726252134761153[17] = 0;
   out_7694726252134761153[18] = 0;
   out_7694726252134761153[19] = 0;
   out_7694726252134761153[20] = 0;
   out_7694726252134761153[21] = 0;
   out_7694726252134761153[22] = 0;
   out_7694726252134761153[23] = 0;
   out_7694726252134761153[24] = 0;
   out_7694726252134761153[25] = 0;
   out_7694726252134761153[26] = 0;
   out_7694726252134761153[27] = 0;
   out_7694726252134761153[28] = 0;
   out_7694726252134761153[29] = 0;
   out_7694726252134761153[30] = 1;
   out_7694726252134761153[31] = 0;
   out_7694726252134761153[32] = 0;
   out_7694726252134761153[33] = 0;
   out_7694726252134761153[34] = 0;
   out_7694726252134761153[35] = 0;
   out_7694726252134761153[36] = 0;
   out_7694726252134761153[37] = 0;
   out_7694726252134761153[38] = 0;
   out_7694726252134761153[39] = 0;
   out_7694726252134761153[40] = 0;
   out_7694726252134761153[41] = 0;
   out_7694726252134761153[42] = 0;
   out_7694726252134761153[43] = 0;
   out_7694726252134761153[44] = 0;
   out_7694726252134761153[45] = 0;
   out_7694726252134761153[46] = 0;
   out_7694726252134761153[47] = 0;
   out_7694726252134761153[48] = 0;
   out_7694726252134761153[49] = 0;
   out_7694726252134761153[50] = 0;
   out_7694726252134761153[51] = 0;
   out_7694726252134761153[52] = 0;
   out_7694726252134761153[53] = 1;
   out_7694726252134761153[54] = 0;
   out_7694726252134761153[55] = 0;
   out_7694726252134761153[56] = 0;
   out_7694726252134761153[57] = 0;
   out_7694726252134761153[58] = 0;
   out_7694726252134761153[59] = 0;
   out_7694726252134761153[60] = 0;
   out_7694726252134761153[61] = 0;
   out_7694726252134761153[62] = 0;
   out_7694726252134761153[63] = 0;
   out_7694726252134761153[64] = 0;
   out_7694726252134761153[65] = 0;
}
void h_32(double *state, double *unused, double *out_8542714594002408647) {
   out_8542714594002408647[0] = state[3];
   out_8542714594002408647[1] = state[4];
   out_8542714594002408647[2] = state[5];
   out_8542714594002408647[3] = state[6];
}
void H_32(double *state, double *unused, double *out_6666282133477867363) {
   out_6666282133477867363[0] = 0;
   out_6666282133477867363[1] = 0;
   out_6666282133477867363[2] = 0;
   out_6666282133477867363[3] = 1;
   out_6666282133477867363[4] = 0;
   out_6666282133477867363[5] = 0;
   out_6666282133477867363[6] = 0;
   out_6666282133477867363[7] = 0;
   out_6666282133477867363[8] = 0;
   out_6666282133477867363[9] = 0;
   out_6666282133477867363[10] = 0;
   out_6666282133477867363[11] = 0;
   out_6666282133477867363[12] = 0;
   out_6666282133477867363[13] = 0;
   out_6666282133477867363[14] = 0;
   out_6666282133477867363[15] = 0;
   out_6666282133477867363[16] = 0;
   out_6666282133477867363[17] = 0;
   out_6666282133477867363[18] = 0;
   out_6666282133477867363[19] = 0;
   out_6666282133477867363[20] = 0;
   out_6666282133477867363[21] = 0;
   out_6666282133477867363[22] = 0;
   out_6666282133477867363[23] = 0;
   out_6666282133477867363[24] = 0;
   out_6666282133477867363[25] = 0;
   out_6666282133477867363[26] = 1;
   out_6666282133477867363[27] = 0;
   out_6666282133477867363[28] = 0;
   out_6666282133477867363[29] = 0;
   out_6666282133477867363[30] = 0;
   out_6666282133477867363[31] = 0;
   out_6666282133477867363[32] = 0;
   out_6666282133477867363[33] = 0;
   out_6666282133477867363[34] = 0;
   out_6666282133477867363[35] = 0;
   out_6666282133477867363[36] = 0;
   out_6666282133477867363[37] = 0;
   out_6666282133477867363[38] = 0;
   out_6666282133477867363[39] = 0;
   out_6666282133477867363[40] = 0;
   out_6666282133477867363[41] = 0;
   out_6666282133477867363[42] = 0;
   out_6666282133477867363[43] = 0;
   out_6666282133477867363[44] = 0;
   out_6666282133477867363[45] = 0;
   out_6666282133477867363[46] = 0;
   out_6666282133477867363[47] = 0;
   out_6666282133477867363[48] = 0;
   out_6666282133477867363[49] = 1;
   out_6666282133477867363[50] = 0;
   out_6666282133477867363[51] = 0;
   out_6666282133477867363[52] = 0;
   out_6666282133477867363[53] = 0;
   out_6666282133477867363[54] = 0;
   out_6666282133477867363[55] = 0;
   out_6666282133477867363[56] = 0;
   out_6666282133477867363[57] = 0;
   out_6666282133477867363[58] = 0;
   out_6666282133477867363[59] = 0;
   out_6666282133477867363[60] = 0;
   out_6666282133477867363[61] = 0;
   out_6666282133477867363[62] = 0;
   out_6666282133477867363[63] = 0;
   out_6666282133477867363[64] = 0;
   out_6666282133477867363[65] = 0;
   out_6666282133477867363[66] = 0;
   out_6666282133477867363[67] = 0;
   out_6666282133477867363[68] = 0;
   out_6666282133477867363[69] = 0;
   out_6666282133477867363[70] = 0;
   out_6666282133477867363[71] = 0;
   out_6666282133477867363[72] = 1;
   out_6666282133477867363[73] = 0;
   out_6666282133477867363[74] = 0;
   out_6666282133477867363[75] = 0;
   out_6666282133477867363[76] = 0;
   out_6666282133477867363[77] = 0;
   out_6666282133477867363[78] = 0;
   out_6666282133477867363[79] = 0;
   out_6666282133477867363[80] = 0;
   out_6666282133477867363[81] = 0;
   out_6666282133477867363[82] = 0;
   out_6666282133477867363[83] = 0;
   out_6666282133477867363[84] = 0;
   out_6666282133477867363[85] = 0;
   out_6666282133477867363[86] = 0;
   out_6666282133477867363[87] = 0;
}
void h_13(double *state, double *unused, double *out_4969815048066148841) {
   out_4969815048066148841[0] = (-2*state[3]*state[5] + 2*state[4]*state[6])*state[9] + (2*state[3]*state[6] + 2*state[4]*state[5])*state[8] + (pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[7];
   out_4969815048066148841[1] = (2*state[3]*state[4] + 2*state[5]*state[6])*state[9] + (-2*state[3]*state[6] + 2*state[4]*state[5])*state[7] + (pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[8];
   out_4969815048066148841[2] = (-2*state[3]*state[4] + 2*state[5]*state[6])*state[8] + (2*state[3]*state[5] + 2*state[4]*state[6])*state[7] + (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[9];
}
void H_13(double *state, double *unused, double *out_1152157836340279365) {
   out_1152157836340279365[0] = 0;
   out_1152157836340279365[1] = 0;
   out_1152157836340279365[2] = 0;
   out_1152157836340279365[3] = 2*state[3]*state[7] - 2*state[5]*state[9] + 2*state[6]*state[8];
   out_1152157836340279365[4] = 2*state[4]*state[7] + 2*state[5]*state[8] + 2*state[6]*state[9];
   out_1152157836340279365[5] = -2*state[3]*state[9] + 2*state[4]*state[8] - 2*state[5]*state[7];
   out_1152157836340279365[6] = 2*state[3]*state[8] + 2*state[4]*state[9] - 2*state[6]*state[7];
   out_1152157836340279365[7] = pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2);
   out_1152157836340279365[8] = 2*state[3]*state[6] + 2*state[4]*state[5];
   out_1152157836340279365[9] = -2*state[3]*state[5] + 2*state[4]*state[6];
   out_1152157836340279365[10] = 0;
   out_1152157836340279365[11] = 0;
   out_1152157836340279365[12] = 0;
   out_1152157836340279365[13] = 0;
   out_1152157836340279365[14] = 0;
   out_1152157836340279365[15] = 0;
   out_1152157836340279365[16] = 0;
   out_1152157836340279365[17] = 0;
   out_1152157836340279365[18] = 0;
   out_1152157836340279365[19] = 0;
   out_1152157836340279365[20] = 0;
   out_1152157836340279365[21] = 0;
   out_1152157836340279365[22] = 0;
   out_1152157836340279365[23] = 0;
   out_1152157836340279365[24] = 0;
   out_1152157836340279365[25] = 2*state[3]*state[8] + 2*state[4]*state[9] - 2*state[6]*state[7];
   out_1152157836340279365[26] = 2*state[3]*state[9] - 2*state[4]*state[8] + 2*state[5]*state[7];
   out_1152157836340279365[27] = 2*state[4]*state[7] + 2*state[5]*state[8] + 2*state[6]*state[9];
   out_1152157836340279365[28] = -2*state[3]*state[7] + 2*state[5]*state[9] - 2*state[6]*state[8];
   out_1152157836340279365[29] = -2*state[3]*state[6] + 2*state[4]*state[5];
   out_1152157836340279365[30] = pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2);
   out_1152157836340279365[31] = 2*state[3]*state[4] + 2*state[5]*state[6];
   out_1152157836340279365[32] = 0;
   out_1152157836340279365[33] = 0;
   out_1152157836340279365[34] = 0;
   out_1152157836340279365[35] = 0;
   out_1152157836340279365[36] = 0;
   out_1152157836340279365[37] = 0;
   out_1152157836340279365[38] = 0;
   out_1152157836340279365[39] = 0;
   out_1152157836340279365[40] = 0;
   out_1152157836340279365[41] = 0;
   out_1152157836340279365[42] = 0;
   out_1152157836340279365[43] = 0;
   out_1152157836340279365[44] = 0;
   out_1152157836340279365[45] = 0;
   out_1152157836340279365[46] = 0;
   out_1152157836340279365[47] = 2*state[3]*state[9] - 2*state[4]*state[8] + 2*state[5]*state[7];
   out_1152157836340279365[48] = -2*state[3]*state[8] - 2*state[4]*state[9] + 2*state[6]*state[7];
   out_1152157836340279365[49] = 2*state[3]*state[7] - 2*state[5]*state[9] + 2*state[6]*state[8];
   out_1152157836340279365[50] = 2*state[4]*state[7] + 2*state[5]*state[8] + 2*state[6]*state[9];
   out_1152157836340279365[51] = 2*state[3]*state[5] + 2*state[4]*state[6];
   out_1152157836340279365[52] = -2*state[3]*state[4] + 2*state[5]*state[6];
   out_1152157836340279365[53] = pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2);
   out_1152157836340279365[54] = 0;
   out_1152157836340279365[55] = 0;
   out_1152157836340279365[56] = 0;
   out_1152157836340279365[57] = 0;
   out_1152157836340279365[58] = 0;
   out_1152157836340279365[59] = 0;
   out_1152157836340279365[60] = 0;
   out_1152157836340279365[61] = 0;
   out_1152157836340279365[62] = 0;
   out_1152157836340279365[63] = 0;
   out_1152157836340279365[64] = 0;
   out_1152157836340279365[65] = 0;
}
void h_14(double *state, double *unused, double *out_8822594196648213134) {
   out_8822594196648213134[0] = state[10];
   out_8822594196648213134[1] = state[11];
   out_8822594196648213134[2] = state[12];
}
void H_14(double *state, double *unused, double *out_4569253841391744422) {
   out_4569253841391744422[0] = 0;
   out_4569253841391744422[1] = 0;
   out_4569253841391744422[2] = 0;
   out_4569253841391744422[3] = 0;
   out_4569253841391744422[4] = 0;
   out_4569253841391744422[5] = 0;
   out_4569253841391744422[6] = 0;
   out_4569253841391744422[7] = 0;
   out_4569253841391744422[8] = 0;
   out_4569253841391744422[9] = 0;
   out_4569253841391744422[10] = 1;
   out_4569253841391744422[11] = 0;
   out_4569253841391744422[12] = 0;
   out_4569253841391744422[13] = 0;
   out_4569253841391744422[14] = 0;
   out_4569253841391744422[15] = 0;
   out_4569253841391744422[16] = 0;
   out_4569253841391744422[17] = 0;
   out_4569253841391744422[18] = 0;
   out_4569253841391744422[19] = 0;
   out_4569253841391744422[20] = 0;
   out_4569253841391744422[21] = 0;
   out_4569253841391744422[22] = 0;
   out_4569253841391744422[23] = 0;
   out_4569253841391744422[24] = 0;
   out_4569253841391744422[25] = 0;
   out_4569253841391744422[26] = 0;
   out_4569253841391744422[27] = 0;
   out_4569253841391744422[28] = 0;
   out_4569253841391744422[29] = 0;
   out_4569253841391744422[30] = 0;
   out_4569253841391744422[31] = 0;
   out_4569253841391744422[32] = 0;
   out_4569253841391744422[33] = 1;
   out_4569253841391744422[34] = 0;
   out_4569253841391744422[35] = 0;
   out_4569253841391744422[36] = 0;
   out_4569253841391744422[37] = 0;
   out_4569253841391744422[38] = 0;
   out_4569253841391744422[39] = 0;
   out_4569253841391744422[40] = 0;
   out_4569253841391744422[41] = 0;
   out_4569253841391744422[42] = 0;
   out_4569253841391744422[43] = 0;
   out_4569253841391744422[44] = 0;
   out_4569253841391744422[45] = 0;
   out_4569253841391744422[46] = 0;
   out_4569253841391744422[47] = 0;
   out_4569253841391744422[48] = 0;
   out_4569253841391744422[49] = 0;
   out_4569253841391744422[50] = 0;
   out_4569253841391744422[51] = 0;
   out_4569253841391744422[52] = 0;
   out_4569253841391744422[53] = 0;
   out_4569253841391744422[54] = 0;
   out_4569253841391744422[55] = 0;
   out_4569253841391744422[56] = 1;
   out_4569253841391744422[57] = 0;
   out_4569253841391744422[58] = 0;
   out_4569253841391744422[59] = 0;
   out_4569253841391744422[60] = 0;
   out_4569253841391744422[61] = 0;
   out_4569253841391744422[62] = 0;
   out_4569253841391744422[63] = 0;
   out_4569253841391744422[64] = 0;
   out_4569253841391744422[65] = 0;
}
void h_33(double *state, double *unused, double *out_4563887877865566276) {
   out_4563887877865566276[0] = state[16];
   out_4563887877865566276[1] = state[17];
   out_4563887877865566276[2] = state[18];
}
void H_33(double *state, double *unused, double *out_7601460816935932859) {
   out_7601460816935932859[0] = 0;
   out_7601460816935932859[1] = 0;
   out_7601460816935932859[2] = 0;
   out_7601460816935932859[3] = 0;
   out_7601460816935932859[4] = 0;
   out_7601460816935932859[5] = 0;
   out_7601460816935932859[6] = 0;
   out_7601460816935932859[7] = 0;
   out_7601460816935932859[8] = 0;
   out_7601460816935932859[9] = 0;
   out_7601460816935932859[10] = 0;
   out_7601460816935932859[11] = 0;
   out_7601460816935932859[12] = 0;
   out_7601460816935932859[13] = 0;
   out_7601460816935932859[14] = 0;
   out_7601460816935932859[15] = 0;
   out_7601460816935932859[16] = 1;
   out_7601460816935932859[17] = 0;
   out_7601460816935932859[18] = 0;
   out_7601460816935932859[19] = 0;
   out_7601460816935932859[20] = 0;
   out_7601460816935932859[21] = 0;
   out_7601460816935932859[22] = 0;
   out_7601460816935932859[23] = 0;
   out_7601460816935932859[24] = 0;
   out_7601460816935932859[25] = 0;
   out_7601460816935932859[26] = 0;
   out_7601460816935932859[27] = 0;
   out_7601460816935932859[28] = 0;
   out_7601460816935932859[29] = 0;
   out_7601460816935932859[30] = 0;
   out_7601460816935932859[31] = 0;
   out_7601460816935932859[32] = 0;
   out_7601460816935932859[33] = 0;
   out_7601460816935932859[34] = 0;
   out_7601460816935932859[35] = 0;
   out_7601460816935932859[36] = 0;
   out_7601460816935932859[37] = 0;
   out_7601460816935932859[38] = 0;
   out_7601460816935932859[39] = 1;
   out_7601460816935932859[40] = 0;
   out_7601460816935932859[41] = 0;
   out_7601460816935932859[42] = 0;
   out_7601460816935932859[43] = 0;
   out_7601460816935932859[44] = 0;
   out_7601460816935932859[45] = 0;
   out_7601460816935932859[46] = 0;
   out_7601460816935932859[47] = 0;
   out_7601460816935932859[48] = 0;
   out_7601460816935932859[49] = 0;
   out_7601460816935932859[50] = 0;
   out_7601460816935932859[51] = 0;
   out_7601460816935932859[52] = 0;
   out_7601460816935932859[53] = 0;
   out_7601460816935932859[54] = 0;
   out_7601460816935932859[55] = 0;
   out_7601460816935932859[56] = 0;
   out_7601460816935932859[57] = 0;
   out_7601460816935932859[58] = 0;
   out_7601460816935932859[59] = 0;
   out_7601460816935932859[60] = 0;
   out_7601460816935932859[61] = 0;
   out_7601460816935932859[62] = 1;
   out_7601460816935932859[63] = 0;
   out_7601460816935932859[64] = 0;
   out_7601460816935932859[65] = 0;
}
#include <eigen3/Eigen/Dense>
#include <iostream>

typedef Eigen::Matrix<double, DIM, DIM, Eigen::RowMajor> DDM;
typedef Eigen::Matrix<double, EDIM, EDIM, Eigen::RowMajor> EEM;
typedef Eigen::Matrix<double, DIM, EDIM, Eigen::RowMajor> DEM;

void predict(double *in_x, double *in_P, double *in_Q, double dt) {
  typedef Eigen::Matrix<double, MEDIM, MEDIM, Eigen::RowMajor> RRM;

  double nx[DIM] = {0};
  double in_F[EDIM*EDIM] = {0};

  // functions from sympy
  f_fun(in_x, dt, nx);
  F_fun(in_x, dt, in_F);


  EEM F(in_F);
  EEM P(in_P);
  EEM Q(in_Q);

  RRM F_main = F.topLeftCorner(MEDIM, MEDIM);
  P.topLeftCorner(MEDIM, MEDIM) = (F_main * P.topLeftCorner(MEDIM, MEDIM)) * F_main.transpose();
  P.topRightCorner(MEDIM, EDIM - MEDIM) = F_main * P.topRightCorner(MEDIM, EDIM - MEDIM);
  P.bottomLeftCorner(EDIM - MEDIM, MEDIM) = P.bottomLeftCorner(EDIM - MEDIM, MEDIM) * F_main.transpose();

  P = P + dt*Q;

  // copy out state
  memcpy(in_x, nx, DIM * sizeof(double));
  memcpy(in_P, P.data(), EDIM * EDIM * sizeof(double));
}

// note: extra_args dim only correct when null space projecting
// otherwise 1
template <int ZDIM, int EADIM, bool MAHA_TEST>
void update(double *in_x, double *in_P, Hfun h_fun, Hfun H_fun, Hfun Hea_fun, double *in_z, double *in_R, double *in_ea, double MAHA_THRESHOLD) {
  typedef Eigen::Matrix<double, ZDIM, ZDIM, Eigen::RowMajor> ZZM;
  typedef Eigen::Matrix<double, ZDIM, DIM, Eigen::RowMajor> ZDM;
  typedef Eigen::Matrix<double, Eigen::Dynamic, EDIM, Eigen::RowMajor> XEM;
  //typedef Eigen::Matrix<double, EDIM, ZDIM, Eigen::RowMajor> EZM;
  typedef Eigen::Matrix<double, Eigen::Dynamic, 1> X1M;
  typedef Eigen::Matrix<double, Eigen::Dynamic, Eigen::Dynamic, Eigen::RowMajor> XXM;

  double in_hx[ZDIM] = {0};
  double in_H[ZDIM * DIM] = {0};
  double in_H_mod[EDIM * DIM] = {0};
  double delta_x[EDIM] = {0};
  double x_new[DIM] = {0};


  // state x, P
  Eigen::Matrix<double, ZDIM, 1> z(in_z);
  EEM P(in_P);
  ZZM pre_R(in_R);

  // functions from sympy
  h_fun(in_x, in_ea, in_hx);
  H_fun(in_x, in_ea, in_H);
  ZDM pre_H(in_H);

  // get y (y = z - hx)
  Eigen::Matrix<double, ZDIM, 1> pre_y(in_hx); pre_y = z - pre_y;
  X1M y; XXM H; XXM R;
  if (Hea_fun){
    typedef Eigen::Matrix<double, ZDIM, EADIM, Eigen::RowMajor> ZAM;
    double in_Hea[ZDIM * EADIM] = {0};
    Hea_fun(in_x, in_ea, in_Hea);
    ZAM Hea(in_Hea);
    XXM A = Hea.transpose().fullPivLu().kernel();


    y = A.transpose() * pre_y;
    H = A.transpose() * pre_H;
    R = A.transpose() * pre_R * A;
  } else {
    y = pre_y;
    H = pre_H;
    R = pre_R;
  }
  // get modified H
  H_mod_fun(in_x, in_H_mod);
  DEM H_mod(in_H_mod);
  XEM H_err = H * H_mod;

  // Do mahalobis distance test
  if (MAHA_TEST){
    XXM a = (H_err * P * H_err.transpose() + R).inverse();
    double maha_dist = y.transpose() * a * y;
    if (maha_dist > MAHA_THRESHOLD){
      R = 1.0e16 * R;
    }
  }

  // Outlier resilient weighting
  double weight = 1;//(1.5)/(1 + y.squaredNorm()/R.sum());

  // kalman gains and I_KH
  XXM S = ((H_err * P) * H_err.transpose()) + R/weight;
  XEM KT = S.fullPivLu().solve(H_err * P.transpose());
  //EZM K = KT.transpose(); TODO: WHY DOES THIS NOT COMPILE?
  //EZM K = S.fullPivLu().solve(H_err * P.transpose()).transpose();
  //std::cout << "Here is the matrix rot:\n" << K << std::endl;
  EEM I_KH = Eigen::Matrix<double, EDIM, EDIM>::Identity() - (KT.transpose() * H_err);

  // update state by injecting dx
  Eigen::Matrix<double, EDIM, 1> dx(delta_x);
  dx  = (KT.transpose() * y);
  memcpy(delta_x, dx.data(), EDIM * sizeof(double));
  err_fun(in_x, delta_x, x_new);
  Eigen::Matrix<double, DIM, 1> x(x_new);

  // update cov
  P = ((I_KH * P) * I_KH.transpose()) + ((KT.transpose() * R) * KT);

  // copy out state
  memcpy(in_x, x.data(), DIM * sizeof(double));
  memcpy(in_P, P.data(), EDIM * EDIM * sizeof(double));
  memcpy(in_z, y.data(), y.rows() * sizeof(double));
}




}
extern "C" {

void live_update_4(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_4, H_4, NULL, in_z, in_R, in_ea, MAHA_THRESH_4);
}
void live_update_9(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_9, H_9, NULL, in_z, in_R, in_ea, MAHA_THRESH_9);
}
void live_update_10(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_10, H_10, NULL, in_z, in_R, in_ea, MAHA_THRESH_10);
}
void live_update_12(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_12, H_12, NULL, in_z, in_R, in_ea, MAHA_THRESH_12);
}
void live_update_31(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_31, H_31, NULL, in_z, in_R, in_ea, MAHA_THRESH_31);
}
void live_update_32(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<4, 3, 0>(in_x, in_P, h_32, H_32, NULL, in_z, in_R, in_ea, MAHA_THRESH_32);
}
void live_update_13(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_13, H_13, NULL, in_z, in_R, in_ea, MAHA_THRESH_13);
}
void live_update_14(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_14, H_14, NULL, in_z, in_R, in_ea, MAHA_THRESH_14);
}
void live_update_33(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_33, H_33, NULL, in_z, in_R, in_ea, MAHA_THRESH_33);
}
void live_H(double *in_vec, double *out_411448996248703735) {
  H(in_vec, out_411448996248703735);
}
void live_err_fun(double *nom_x, double *delta_x, double *out_1085822966685210764) {
  err_fun(nom_x, delta_x, out_1085822966685210764);
}
void live_inv_err_fun(double *nom_x, double *true_x, double *out_7262348582700839748) {
  inv_err_fun(nom_x, true_x, out_7262348582700839748);
}
void live_H_mod_fun(double *state, double *out_3888029891761610350) {
  H_mod_fun(state, out_3888029891761610350);
}
void live_f_fun(double *state, double dt, double *out_6542603415890197301) {
  f_fun(state,  dt, out_6542603415890197301);
}
void live_F_fun(double *state, double dt, double *out_4350196572466825462) {
  F_fun(state,  dt, out_4350196572466825462);
}
void live_h_4(double *state, double *unused, double *out_7074488734674611985) {
  h_4(state, unused, out_7074488734674611985);
}
void live_H_4(double *state, double *unused, double *out_2717965093872703048) {
  H_4(state, unused, out_2717965093872703048);
}
void live_h_9(double *state, double *unused, double *out_8822594196648213134) {
  h_9(state, unused, out_8822594196648213134);
}
void live_H_9(double *state, double *unused, double *out_4569253841391744422) {
  H_9(state, unused, out_4569253841391744422);
}
void live_h_10(double *state, double *unused, double *out_2903305059900435345) {
  h_10(state, unused, out_2903305059900435345);
}
void live_H_10(double *state, double *unused, double *out_5349451036793780592) {
  H_10(state, unused, out_5349451036793780592);
}
void live_h_12(double *state, double *unused, double *out_2881046531679803007) {
  h_12(state, unused, out_2881046531679803007);
}
void live_H_12(double *state, double *unused, double *out_9099223470915436044) {
  H_12(state, unused, out_9099223470915436044);
}
void live_h_31(double *state, double *unused, double *out_2501729476602464410) {
  h_31(state, unused, out_2501729476602464410);
}
void live_H_31(double *state, double *unused, double *out_7694726252134761153) {
  H_31(state, unused, out_7694726252134761153);
}
void live_h_32(double *state, double *unused, double *out_8542714594002408647) {
  h_32(state, unused, out_8542714594002408647);
}
void live_H_32(double *state, double *unused, double *out_6666282133477867363) {
  H_32(state, unused, out_6666282133477867363);
}
void live_h_13(double *state, double *unused, double *out_4969815048066148841) {
  h_13(state, unused, out_4969815048066148841);
}
void live_H_13(double *state, double *unused, double *out_1152157836340279365) {
  H_13(state, unused, out_1152157836340279365);
}
void live_h_14(double *state, double *unused, double *out_8822594196648213134) {
  h_14(state, unused, out_8822594196648213134);
}
void live_H_14(double *state, double *unused, double *out_4569253841391744422) {
  H_14(state, unused, out_4569253841391744422);
}
void live_h_33(double *state, double *unused, double *out_4563887877865566276) {
  h_33(state, unused, out_4563887877865566276);
}
void live_H_33(double *state, double *unused, double *out_7601460816935932859) {
  H_33(state, unused, out_7601460816935932859);
}
void live_predict(double *in_x, double *in_P, double *in_Q, double dt) {
  predict(in_x, in_P, in_Q, dt);
}
}

const EKF live = {
  .name = "live",
  .kinds = { 4, 9, 10, 12, 31, 32, 13, 14, 33 },
  .feature_kinds = {  },
  .f_fun = live_f_fun,
  .F_fun = live_F_fun,
  .err_fun = live_err_fun,
  .inv_err_fun = live_inv_err_fun,
  .H_mod_fun = live_H_mod_fun,
  .predict = live_predict,
  .hs = {
    { 4, live_h_4 },
    { 9, live_h_9 },
    { 10, live_h_10 },
    { 12, live_h_12 },
    { 31, live_h_31 },
    { 32, live_h_32 },
    { 13, live_h_13 },
    { 14, live_h_14 },
    { 33, live_h_33 },
  },
  .Hs = {
    { 4, live_H_4 },
    { 9, live_H_9 },
    { 10, live_H_10 },
    { 12, live_H_12 },
    { 31, live_H_31 },
    { 32, live_H_32 },
    { 13, live_H_13 },
    { 14, live_H_14 },
    { 33, live_H_33 },
  },
  .updates = {
    { 4, live_update_4 },
    { 9, live_update_9 },
    { 10, live_update_10 },
    { 12, live_update_12 },
    { 31, live_update_31 },
    { 32, live_update_32 },
    { 13, live_update_13 },
    { 14, live_update_14 },
    { 33, live_update_33 },
  },
  .Hes = {
  },
  .sets = {
  },
  .extra_routines = {
    { "H", live_H },
  },
};

ekf_init(live);
